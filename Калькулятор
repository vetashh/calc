{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H9Bs44yLPNF8","outputId":"5ee13643-e0a5-48df-e5dc-db1e22b65130"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: num2words in /usr/local/lib/python3.10/dist-packages (0.5.13)\n","Requirement already satisfied: docopt>=0.6.2 in /usr/local/lib/python3.10/dist-packages (from num2words) (0.6.2)\n","Данный калькулятор поддерживает примеры, написанные в текстовом виде ('<число> <операция> <число>', где <число> - \n","не отрицательное целое число меньшее 100, записанное словами, <арифмитическая операция> - одна из операций \n","\"плюс\", \"минус\", \"умножить\"), и выдает результат в виде текстового представления числа, являющегося ответом. \n","Пример calc(\"двадцать пять плюс тринадцать\") -> \"тридцать восемь\"\n","\n"]}],"source":["!pip install num2words\n","from num2words import num2words\n","\n","val = {'ноль': 0, 'один': 1, 'два': 2, 'три': 3, 'четыре': 4, 'пять': 5, 'шесть': 6, 'семь': 7, 'восемь': 8, 'девять': 9,\n","       'десять': 10, 'одиннадцать': 11, 'двенадцать': 12, 'тринадцать': 13, 'четырнадцать': 14, 'пятнадцать': 15,\n","       'шестнадцать': 16, 'семнадцать': 17, 'восемнадцать': 18, 'девятнадцать': 19, 'двадцать': 20, 'тридцать': 30,\n","       'сорок': 40, 'пятьдесят': 50, 'шестьдесят': 60, 'семьдесят': 70, 'восемЬдесят': 80, 'девяносто': 90, 'сто': 100}\n","# произвольное кол-во операций (3), диагностика ошибок (2)\n","\n","print('Данный калькулятор поддерживает примеры, написанные в текстовом виде (\\'<число> <операция> <число>\\', где <число> - \\n'\n","      'не отрицательное целое число меньшее 100, записанное словами, <арифмитическая операция> - одна из операций \\n'\n","      '\"плюс\", \"минус\", \"умножить\"), и выдает результат в виде текстового представления числа, являющегося ответом. \\n'\n","      'Пример calc(\"двадцать пять плюс тринадцать\") -> \"тридцать восемь\"\\n')\n","\n","def calc():\n","    example = input('Введите пример: ')\n","    list_word = example.split(' ')\n","    list_res = []\n","    num = ind = 0\n","    while ind < len(list_word):\n","        if list_word[ind] == 'умножить':\n","            list_word[ind:ind+2] = ['умножить на']\n","        ind += 1\n","    if list_word[0] in ['плюс', 'минус', 'умножить на'] or list_word[-1] in ['плюс', 'минус', 'умножить на']:\n","        print('Нельзя начинать пример с операций или заканчивать ими, попробуйте заново\\n')\n","        calc()\n","    for ind, word in enumerate(list_word):\n","        if word not in ['плюс', 'минус', 'умножить на']:\n","            if not ind:\n","                try:\n","                    num += val[word]\n","                except:\n","                    print('Проверьте написание чисел (в примере надо использовать целые числа от 0 до 100) и написание операций\\n(надо использовать только операции \"плюс\", \"минус\", \"умножить на\") и попробуйте заново\\n')\n","                    calc()\n","            else:\n","                if list_word[ind-1] not in ['плюс', 'минус', 'умножить на']:\n","                    try:\n","                        val[word]\n","                        if len(str(val[list_word[ind-1]])) > len(str(val[word])) and word != 'ноль':\n","                            num += val[word]\n","                    except:\n","                        print('Проверьте написание чисел (в примере надо использовать целые числа от 0 до 100) и написание операций\\n(надо использовать только операции \"плюс\", \"минус\", \"умножить на\") и попробуйте заново\\n')\n","                        calc()\n","                else:\n","                    try:\n","                        num += val[word]\n","                    except:\n","                        print('Проверьте написание чисел (в примере надо использовать целые числа от 0 до 100) и написание операций \\n(надо использовать только операции \"плюс\", \"минус\", \"умножить на\") и попробуйте заново\\n')\n","                        calc()\n","        else:\n","            if list_word[ind-1] in ['плюс', 'минус', 'умножить на'] or ind:\n","                list_res.append(num)\n","            else:\n","                print('Нельзя ставить две и более операции вместе, попробуйте заново\\n')\n","                calc()\n","            list_res.append(word)\n","            num = 0\n","    list_res.append(num)\n","    ind = 0\n","    while ind < len(list_res):\n","        if list_res[ind] == 'умножить на':\n","            list_res[ind-1:ind+2] = [list_res[ind-1] * list_res[ind+1]]\n","            continue\n","        ind += 1\n","    ind = 0\n","    while ind < len(list_res):\n","        if list_res[ind] == 'плюс':\n","          list_res[ind-1:ind+2] = [list_res[ind-1] + list_res[ind+1]]\n","          continue\n","        elif list_res[ind] == 'минус':\n","            list_res[ind-1:ind+2] = [list_res[ind-1] - list_res[ind+1]]\n","            continue\n","        ind += 1\n","    return num2words(list_res[0], lang='ru')\n","print(calc())\n","\n","# плюс пять умножить на два\n","# пять плюс плюс пять\n","# пть плс пть\n","# пять плюс шсть\n","# пять плюс шесть умножить на семь минус пять"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOol/f9QD9N+z/Te7VRX4tL"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}